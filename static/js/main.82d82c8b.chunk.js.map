{"version":3,"sources":["ImageBlock.js","PopUp.js","Title.js","Search.js","Header.js","AddNew.js","DeleteRecipe.js","MainPage.js","Back.js","More.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["ImageBlock","id","name","src","theme","useContext","mode","className","alt","style","color","Popup","close","recName","contents","onClick","map","detail","index","Title","transition","opacity","Search","setSearch","type","placeholder","onChange","event","target","value","backgroundColor","border","Header","AddNew","DeleteRecipe","getRecipe","IconButton","aria-label","fetch","method","then","res","json","deleteItem","fontSize","MainPage","recipes","useState","setShow","searchRecipe","setRecName","ingds","setIngds","btn","stopPropagation","filter","list","toUpperCase","includes","elements","ingredients","open","display","to","Back","back","useHistory","alignItems","goBack","More","useParams","item","find","ele","procedure","count","marginTop","textAlign","steps","Form","useForm","register","handleSubmit","errors","formState","console","log","marginLeft","onSubmit","data","headers","body","JSON","stringify","split","image","rec","htmlFor","required","onCLick","createContext","App","setRecipes","setTheme","useEffect","document","title","backgroundImage","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.82d82c8b.chunk.js","sourcesContent":["import { useContext } from \"react\";\r\nimport { mode } from \"./App\";\r\n\r\nfunction ImageBlock({ id, name, src }) {\r\n  const { theme } = useContext(mode);\r\n\r\n  return (\r\n    <>\r\n      {/* Image grid of the recipes on the Main Page */}\r\n      <div className=\"image\">\r\n        <img src={src} alt={id}></img>\r\n      </div>\r\n\r\n      {/* Recipe name under Image on the Main Page */}\r\n      <div>\r\n        <h3 style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}>{name}</h3>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { ImageBlock };\r\n","import { useContext } from \"react\";\r\nimport { mode } from \"./App\";\r\n\r\nfunction Popup({ close, recName, contents }) {\r\n  const { theme } = useContext(mode);\r\n\r\n  return (\r\n    <>\r\n      {/* Close button to close the pop-up window */}\r\n      <button className=\"close-btn\" onClick={close}>\r\n        X\r\n      </button>\r\n\r\n      {/* Recipe name of the selected recipe */}\r\n      <h2 style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}>{recName}</h2>\r\n\r\n      <p className=\"ing\" style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}>\r\n        Ingredients\r\n      </p>\r\n      <hr />\r\n\r\n      {/* List of Ingredients of the selected recipe */}\r\n      <ul>\r\n        {contents.map((detail, index) => {\r\n          return (\r\n            <li\r\n              key={index}\r\n              style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}\r\n            >\r\n              {detail}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Popup };\r\n","import { useContext } from \"react\";\r\nimport { mode } from \"./App\";\r\n\r\nfunction Title() {\r\n  const { theme } = useContext(mode);\r\n\r\n  return (\r\n    // Header of the website\r\n    <header>\r\n      <div>\r\n        <h2\r\n          style={{\r\n            color: theme === \"dark\" ? \"\" : \"#f5b876\",\r\n            transition: \"0.1s\",\r\n          }}\r\n        >\r\n          Just\r\n        </h2>\r\n        <h1\r\n          style={{ opacity: theme === \"dark\" ? \"\" : \"0.4\", transition: \"0.1s\" }}\r\n        >\r\n          RECIPE\r\n        </h1>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport { Title };\r\n","import { useContext } from \"react\";\r\nimport { mode } from \"./App\";\r\n\r\nfunction Search({ setSearch }) {\r\n  const { theme } = useContext(mode);\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <div>\r\n        {/* Searchbar for the filter function */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search your delicacy here...\"\r\n          onChange={(event) => setSearch(event.target.value)}\r\n          style={{\r\n            backgroundColor: theme === \"dark\" ? \"\" : \"#a3a1a1\",\r\n            color: theme === \"dark\" ? \"\" : \"white\",\r\n            border: theme === \"dark\" ? \"\" : \"2px solid #f5b876\",\r\n            transition: \"0.1s\",\r\n          }}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Search };\r\n","import { Title } from \"./Title\";\r\nimport { Search } from \"./Search\";\r\n\r\nfunction Header({ setSearch }) {\r\n  return (\r\n    <>\r\n      {/* Header of the page */}\r\n      <Title />\r\n\r\n      {/* Searchbar to filter the recipes */}\r\n      <Search setSearch={setSearch} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Header };\r\n","import { useContext } from \"react\";\r\nimport { mode } from \"./App\";\r\n\r\nfunction AddNew() {\r\n  const { theme } = useContext(mode);\r\n\r\n  return (\r\n    // Add new Grid on the Main Page\r\n    <div\r\n      className=\"addNew\"\r\n      style={{ backgroundColor: theme === \"dark\" ? \"\" : \"#797979\" }}\r\n    >\r\n      <div className=\"add\">\r\n        <i\r\n          style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}\r\n          className=\"fas fa-plus-circle\"\r\n        ></i>\r\n      </div>\r\n\r\n      <div>\r\n        <h3 style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}>\r\n          add a new recipe\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { AddNew };\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useContext } from \"react\";\r\nimport { mode } from \"./App\";\r\n\r\nfunction DeleteRecipe({ id }) {\r\n  const { theme, getRecipe } = useContext(mode);\r\n\r\n  function deleteItem(id) {\r\n    fetch(`https://609e2ac333eed80017957e36.mockapi.io/recipe/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => getRecipe());\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      aria-label=\"delete\"\r\n      onClick={() => deleteItem(id)}\r\n      className=\"remove-btn\"\r\n    >\r\n      <DeleteIcon\r\n        style={{\r\n          color: theme === \"dark\" ? \"#bb0d0d\" : \"white\",\r\n        }}\r\n        fontSize=\"large\"\r\n      />\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport { DeleteRecipe };\r\n","import { useState } from \"react\";\r\nimport { ImageBlock } from \"./ImageBlock.js\";\r\nimport { Popup } from \"./PopUp.js\";\r\nimport { Header } from \"./Header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AddNew } from \"./AddNew\";\r\nimport { DeleteRecipe } from \"./DeleteRecipe\";\r\nimport { useContext } from \"react\";\r\nimport { mode } from \"./App\";\r\n\r\nfunction MainPage() {\r\n  const { theme, recipes } = useContext(mode);\r\n  const [show, setShow] = useState(\"none\");\r\n  const [searchRecipe, setSearch] = useState(\"\");\r\n  const [recName, setRecName] = useState(\"\");\r\n  const [ingds, setIngds] = useState([]);\r\n\r\n  const visibility = { display: show };\r\n\r\n  // Function for the pop-up window to open\r\n  const open = (name, ingredients) => {\r\n    setShow(\"flex\");\r\n    setRecName(name);\r\n    setIngds(ingredients);\r\n  };\r\n\r\n  const contents = [...ingds];\r\n\r\n  // Function for the pop-up window to close\r\n  const close = (btn) => {\r\n    btn.stopPropagation();\r\n    setShow(\"none\");\r\n    setRecName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Title and the search bar Component */}\r\n      <Header setSearch={setSearch} />\r\n\r\n      {/* List of Recipes on the Main Page */}\r\n      <div className=\"container\">\r\n        {/* To filter in the searchbar and display the required recipes */}\r\n        {recipes\r\n          .filter((list) => {\r\n            if (searchRecipe === \"\") {\r\n              return list;\r\n            } else if (\r\n              list.name.toUpperCase().includes(searchRecipe.toUpperCase())\r\n            ) {\r\n              return list;\r\n            }\r\n          })\r\n          .map((elements) => {\r\n            const { id, name, src, ingredients } = elements;\r\n\r\n            return (\r\n              <div\r\n                className=\"food\"\r\n                style={{\r\n                  backgroundColor: theme === \"dark\" ? \"\" : \"#797979\",\r\n                  border: theme === \"dark\" ? \"\" : \"2px solid #f5b876\",\r\n                  transition: \"0.1s\",\r\n                }}\r\n                key={id}\r\n                onClick={() => open(name, ingredients)}\r\n              >\r\n                {/* Recipe image and name Component */}\r\n                <ImageBlock id={id} name={name} src={src} />\r\n\r\n                {/* Pop-up window section */}\r\n                <div\r\n                  className=\"popup\"\r\n                  style={{ display: recName === name ? \"flex\" : \"none\" }}\r\n                >\r\n                  <div\r\n                    className=\"foodContent\"\r\n                    style={{\r\n                      backgroundColor: theme === \"dark\" ? \"\" : \"#797979\",\r\n                    }}\r\n                  >\r\n                    {/* Pop-up component which contains the pop-up window requirements */}\r\n                    <Popup\r\n                      close={close}\r\n                      recName={recName}\r\n                      contents={contents}\r\n                    />\r\n\r\n                    {/* Delete section for removing a recipe */}\r\n                    <DeleteRecipe\r\n                      close={close}\r\n                      // getRecipe={getRecipe}\r\n                      id={elements.id}\r\n                    ></DeleteRecipe>\r\n\r\n                    {/* Link to open the procedure page */}\r\n                    <Link to={`/more&${name}`}>\r\n                      <button\r\n                        className=\"more-btn\"\r\n                        style={{\r\n                          filter: theme === \"dark\" ? \"\" : \"grayscale(0.6)\",\r\n                        }}\r\n                      >\r\n                        PROCEDURE\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        {/* Link to add a new recipe form */}\r\n        <Link to={`/addRecipe`}>\r\n          <AddNew />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { MainPage };\r\n","import { useHistory } from \"react-router\";\r\nimport { useContext } from \"react\";\r\nimport { mode } from \"./App\";\r\n\r\nfunction Back() {\r\n  const back = useHistory();\r\n  const { theme } = useContext(mode);\r\n\r\n  // Go back button using useHistory Hook\r\n  return (\r\n    <div style={{ alignItems: \"center\" }}>\r\n      <button\r\n        className=\"back-btn\"\r\n        onClick={() => back.goBack()}\r\n        style={{ filter: theme === \"dark\" ? \"\" : \"grayscale(0.6)\" }}\r\n      >\r\n        GO BACK\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Back };\r\n","import { useParams } from \"react-router\";\r\nimport { Title } from \"./Title\";\r\nimport { Back } from \"./Back\";\r\nimport { useContext } from \"react\";\r\nimport { mode } from \"./App\";\r\n\r\nfunction More() {\r\n  const { theme, recipes } = useContext(mode);\r\n\r\n  const { name } = useParams();\r\n  const item = recipes.find((ele) => ele.name === name);\r\n  const ingds = item.ingredients;\r\n  const procedure = item.procedure;\r\n\r\n  let count = 1;\r\n\r\n  return (\r\n    <div className=\"more\">\r\n      <div className=\"more-top\">\r\n        <div className=\"more-block1\">\r\n          <div className=\"image-block1\">\r\n            <img src={item.src} alt={item.name}></img>\r\n          </div>\r\n\r\n          <div className=\"more-block1-Ing\">\r\n            <h2 style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}>\r\n              Ingredients\r\n            </h2>\r\n\r\n            <hr></hr>\r\n\r\n            {/* Ingredients section in the procedure page */}\r\n            <ul>\r\n              {ingds.map((ingredients, index) => {\r\n                return (\r\n                  <li\r\n                    key={index}\r\n                    style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}\r\n                  >\r\n                    {ingredients}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Header and go back to main page section */}\r\n        <header>\r\n          <section className=\"more-midblock\">\r\n            <Title />\r\n            <hr style={{ marginTop: \"20px\" }} />\r\n            <h1 style={{ color: \"#f5b876\", textAlign: \"center\" }}>\r\n              {name.toUpperCase()}\r\n            </h1>\r\n            <hr />\r\n            <Back />\r\n          </section>\r\n        </header>\r\n      </div>\r\n\r\n      <hr></hr>\r\n\r\n      {/* Shows the procedure the selected recipe */}\r\n      <div\r\n        className=\"more-block2\"\r\n        style={{ filter: theme === \"dark\" ? \"\" : \"invert(1)\" }}\r\n      >\r\n        <h2>Procedure</h2>\r\n\r\n        <hr></hr>\r\n\r\n        {procedure.map((steps, index) => {\r\n          return (\r\n            <p key={index}>\r\n              <b>Step {count++}:</b> {steps}\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { More };\r\n","import { useForm } from \"react-hook-form\";\r\nimport \"./App.css\";\r\nimport { Title } from \"./Title\";\r\nimport { Back } from \"./Back\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { mode } from \"./App\";\r\n\r\nfunction Form() {\r\n  const { theme, getRecipe, recipes } = useContext(mode);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    fetch(\"https://609e2ac333eed80017957e36.mockapi.io/recipe\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/JSON\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        ingredients: data.ingredients.split(\", \"),\r\n        procedure: data.procedure.split(\". \"),\r\n        src: `/images/${data.image}.jpg`,\r\n      }),\r\n    })\r\n      .then((rec) => rec.json())\r\n      .then((rec) => getRecipe());\r\n  };\r\n\r\n  console.log(errors);\r\n  console.log({ recipes });\r\n\r\n  const addIng = () => {};\r\n\r\n  return (\r\n    <>\r\n      {/* Header and go back to the main page section */}\r\n      <div style={{ marginLeft: \"10px\" }}>\r\n        <Back />\r\n        <Title />\r\n      </div>\r\n\r\n      {/* Form to add a new recipe */}\r\n      <form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        style={{\r\n          border: theme === \"dark\" ? \"\" : \"2px solid #f5b876\",\r\n          backgroundColor: theme === \"dark\" ? \"\" : \"#797979\",\r\n          transition: \"0.1s\",\r\n        }}\r\n      >\r\n        <div>\r\n          <label\r\n            htmlFor=\"name\"\r\n            style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}\r\n          >\r\n            RECIPE NAME\r\n          </label>\r\n          <input\r\n            name=\"name\"\r\n            placeholder=\"Abc Xyz\"\r\n            {...register(\"name\", { required: true })}\r\n          />\r\n        </div>\r\n        {errors.name && <span>This field is required</span>}\r\n\r\n        <div>\r\n          <label\r\n            htmlFor=\"ingredients\"\r\n            style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}\r\n          >\r\n            INGREDIENTS\r\n          </label>\r\n          <input\r\n            name=\"ingredients\"\r\n            placeholder=\"Milk\"\r\n            {...register(\"ingredients\", { required: true })}\r\n          />\r\n          <input type=\"button\" value=\"+\" onCLick={addIng} />\r\n        </div>\r\n        {errors.ingredients && <span>This field is required</span>}\r\n\r\n        <div>\r\n          <label\r\n            htmlFor=\"procedure\"\r\n            style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}\r\n          >\r\n            PROCEDURE\r\n          </label>\r\n          <input\r\n            name=\"procedure\"\r\n            placeholder=\"Steps to be followed...\"\r\n            {...register(\"procedure\", { required: true })}\r\n          />\r\n        </div>\r\n        {errors.procedure && <span>This field is required</span>}\r\n\r\n        <div>\r\n          <label\r\n            htmlFor=\"id\"\r\n            style={{ color: theme === \"dark\" ? \"\" : \"#f5b876\" }}\r\n          >\r\n            IMAGE NAME\r\n          </label>\r\n          <input\r\n            name=\"id\"\r\n            placeholder=\"abc-xyz\"\r\n            {...register(\"image\", { required: true })}\r\n          />\r\n        </div>\r\n        {errors.image && <span>This field is required</span>}\r\n\r\n        <input\r\n          type=\"submit\"\r\n          style={{ filter: theme === \"dark\" ? \"\" : \"grayscale(0.6)\" }}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Form };\r\n","import { createContext, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { MainPage } from \"./MainPage\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { More } from \"./More\";\nimport { Form } from \"./Form\";\n\nconst mode = createContext(null);\n\nfunction App() {\n  const [recipes, setRecipes] = useState([]);\n  const [theme, setTheme] = useState(\"dark\");\n\n  function getRecipe() {\n    // Fetching recipe data from the MOCK API\n    fetch(\"https://609e2ac333eed80017957e36.mockapi.io/recipe\", {\n      method: \"GET\",\n    })\n      .then((rec) => rec.json())\n      .then((rec) => setRecipes(rec));\n  }\n\n  const shade = () => {\n    setTheme(theme === \"normal\" ? \"dark\" : \"normal\");\n\n    if (theme === \"dark\") {\n      document.body.style.backgroundImage = \"none\";\n      document.body.style.backgroundColor = \"#202020\";\n    } else {\n      document.body.style.backgroundImage = \"\";\n    }\n  };\n\n  useEffect(() => {\n    // Title of the website\n    document.title = \"Just Recipe\";\n    getRecipe();\n  }, []);\n\n  return (\n    <>\n      <button\n        className=\"mode\"\n        style={{\n          backgroundColor: theme === \"dark\" ? \"#202020\" : \"#797979\",\n          color: theme === \"dark\" ? \"#f5f5f5\" : \"#f5b876\",\n        }}\n        onClick={shade}\n      >\n        {theme.toUpperCase()}\n      </button>\n\n      <mode.Provider value={{ theme, getRecipe, recipes }}>\n        <Switch>\n          {/* HOME Page with Recipes and searchbar */}\n          <Route exact path=\"/\">\n            <MainPage />\n          </Route>\n\n          {/* Procedure Page which shows the ingredients and the procedure of the selected recipe from the pop-up window */}\n          <Route path=\"/more&:name\">\n            <More />\n          </Route>\n\n          {/* Add a New Recipe Form Page */}\n          <Route path=\"/addRecipe\">\n            <Form />\n          </Route>\n        </Switch>\n      </mode.Provider>\n    </>\n  );\n}\n\nexport { App, mode };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}